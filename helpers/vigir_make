#!/bin/bash
#/*********************************************************************
# * Software License Agreement (BSD License)
# *
# *  Copyright (c) 2013-2015, Team ViGIR ( TORC Robotics LLC, TU Darmstadt, 
# *  Virginia Tech, Oregon State University, Cornell University, and Leibniz University Hanover )
# *  All rights reserved.
# *
# *  Redistribution and use in source and binary forms, with or without
# *  modification, are permitted provided that the following conditions
# *  are met:
# *
# *   * Redistributions of source code must retain the above copyright
# *     notice, this list of conditions and the following disclaimer.
# *   * Redistributions in binary form must reproduce the above
# *     copyright notice, this list of conditions and the following
# *     disclaimer in the documentation and/or other materials provided
# *     with the distribution.
# *   * Neither the name of Team ViGIR, TORC Robotics, nor the names of its
# *     contributors may be used to endorse or promote products derived
# *     from this software without specific prior written permission.
# *
# *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# *  POSSIBILITY OF SUCH DAMAGE.
# *********************************************************************/
# @TODO_ADD_AUTHOR_INFO
# This is mainly to ask for sudo at the beginning and not mid-build
#sudo echo "Make Team ViGIR software ..."
if [ -z "$VIGIR_ROOT_DIR" ]; then
	echo
	echo "-------------------------------------------------------------------------"
	echo "-------------------------------------------------------------------------"
	echo
	echo " The VIGIR_ROOT_DIR (e.g. ~/vigir_repo ) is not set.  "
	echo " This must be set for the scripts and build system to work correctly!"
	echo
	echo " Please correct in the .bashrc and re-start shell!"
	echo
	echo "-------------------------------------------------------------------------"
	echo "-------------------------------------------------------------------------"
	echo

	exit 1
fi

CLEAN=false
INSTALL=false
DEBUG=false
if [ ! -z $1 ]
  then
    # to add more options do "... --long clean,option2,option3 -- ..." and add them to the case
    TEMP=`getopt -o ct --long clean,install,debug -- "$@"`

    echo "Options TEMP="$TEMP

    if [ $? != 0 ] ; then echo "Please use --clean to pre-clean or no option" >&2 ; exit 1 ; fi

    eval set -- "$TEMP"

    while true ; do
      case "$1"
        in
        # if you add a new option don't forget to add it to the TEMP string above!
          -c|--clean)   CLEAN=true; echo "Clean option invoked!"; break;;
          -i|--install) INSTALL=true; echo "Install option invoked"; break;;
          -d|--debug)   DEBUG=true; echo "Debug option invoked"; break;;
      *) echo "Argument is unknown, use '--clean' if you want to pre-clean the build"; echo $1; exit;;
        esac
    done
fi

if [ -n $VIGIR_ENV ]
then
  if [ "$VIGIR_ENV" == "Indigo" ]
  then
    echo $VIGIR_ENV" == Indigo - Ready to roll!"
  else
    echo $VIGIR_ENV" != VIGIR_ENV - need to set up 'vig' Indigo environment first!"
    exit
  fi
else
  echo -e "VIGIR_ENV not set - set up the 'vig' Indigo environment first!"
  exit
fi

if $CLEAN
then
  echo " Clean catkin-based software ..."
  cd ${VIGIR_ROOT_DIR}/catkin_ws
  rm -rf devel/ build/ install/
fi

echo ""
echo "Compile all of the Team ViGIR catkin software ..."
cd ${VIGIR_ROOT_DIR}/catkin_ws

TEMP=""
if $INSTALL
then
  TEMP="$TEMP install"
fi

if $DEBUG
then
  echo "Catkin make with Debug build type .."
  TEMP="$TEMP -DCMAKE_BUILD_TYPE=Debug"
else
  echo "Catkin make with Release build type .."
  TEMP="$TEMP -DCMAKE_BUILD_TYPE=Release"
fi

echo "Invoke catkin_make with options:"
echo "catkin_make "$TEMP
catkin_make $TEMP

message=$?
#Case there is error
if [ $message != 0 ] ; then echo $message; echo "Error in executing catkin_make"; exit 1; fi


if $INSTALL
then
  # Below builds pronto and copies ROS translators into ViGIR install
  # folder afterwards
  if [ -d "$VIGIR_ROOT_DIR/pronto-distro" ]; then
    vigir_pronto_build_for_deploy.sh

  else
    echo "------------------------------"
    echo "Pronto not found, not building!"
    echo "------------------------------"
  fi
fi

message=$?
#Case there is error
if [ $message != 0 ] ; then echo $message; echo "Error in executing pronto make"; exit 1; fi

echo "Successfully built Team ViGIR software!"


